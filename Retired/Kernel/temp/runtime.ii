# 1 "runtime.cpp"
# 1 "/home/colin/Development/OSdevelopment/Kernel/Kernel/temp//"
# 1 "<command-line>"
# 1 "runtime.cpp"
# 1 "tools.h" 1







# 1 "/usr/lib/gcc/x86_64-unknown-linux-gnu/4.7.1/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-unknown-linux-gnu/4.7.1/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 102 "/usr/lib/gcc/x86_64-unknown-linux-gnu/4.7.1/include/stdarg.h" 3 4
typedef __gnuc_va_list va_list;
# 9 "tools.h" 2


class CStringPrint
{
public:
 CStringPrint();
 virtual ~CStringPrint();

 void Print(const char *format, ...);
 void PrintList(const char *format, va_list &params);

 static bool IsDigit(char c);
 static int LengthOf(const char *s);

protected:
 virtual void PrintOut(const char *data, int length) = 0;

private:
 int ParseFormat(va_list &params, const char *format);
};



static __inline__ void outb(unsigned short port, unsigned char val)
{
   asm volatile("outb %0,%1"::"a"(val), "Nd" (port));
}

static __inline__ void outw(unsigned short port, unsigned short val)
{
   asm volatile("outw %0,%1"::"a"(val), "Nd" (port));
}

static __inline__ void outl(unsigned short port, unsigned int val)
{
   asm volatile("outl %0,%1"::"a"(val), "Nd" (port));
}

static __inline__ unsigned char inb(unsigned short port)
{
   unsigned char ret;
   asm volatile ("inb %1,%0":"=a"(ret):"Nd"(port));
   return ret;
}

static __inline__ unsigned short inw(unsigned short port)
{
   unsigned short ret;
   asm volatile ("inw %1,%0":"=a"(ret):"Nd"(port));
   return ret;
}

static __inline__ unsigned int inl(unsigned short port)
{
   unsigned int ret;
   asm volatile ("inl %1,%0":"=a"(ret):"Nd"(port));
   return ret;
}
# 75 "tools.h"
static __inline__ void io_wait(void)
{
   asm volatile("outb %%al, $0x80" : : "a"(0));


}
# 2 "runtime.cpp" 2
# 1 "debug.h" 1





void InitDebug(void);

void kcls(void);
void kprintf(const char *format, ...);
void test(char c);
# 3 "runtime.cpp" 2
# 1 "runtime.h" 1







typedef unsigned int size_t;

typedef unsigned char UInt8;
typedef unsigned short UInt16;
typedef unsigned int UInt32;
# 4 "runtime.cpp" 2



extern "C" {

int __cxa_pure_virtual() __attribute__((noinline, used));
int __cxa_pure_virtual()
{

    kprintf("FAILURE (%s:%i): %s\n", "runtime.cpp", 13, "Pure virtual method called.");
    return 0;
}

}



void* operator new (size_t size)
{
    return ((void*)0);
}

void* operator new[] (size_t size)
{
 return ((void*)0);
}

void operator delete (void * p)
{
}

void operator delete[] (void * p)
{
}
